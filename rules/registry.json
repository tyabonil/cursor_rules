{
  "version": "1.0.0",
  "rules": [
    {
      "id": "sec-001",
      "name": "No Secrets in Code",
      "category": "security",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Prevents committing secrets, API keys, passwords, or credentials",
      "file": "/rules/basic/security.md#rule-sec-001-no-secrets-in-code",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "sec-002",
      "name": "Environment File Protection",
      "category": "security",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Blocks .env files while requiring .env.example",
      "file": "/rules/basic/security.md#rule-sec-002-environment-file-protection",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "sec-003",
      "name": "No Private Repository References",
      "category": "security",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Prevents private repo references in public code",
      "file": "/rules/basic/security.md#rule-sec-003-no-private-repository-references",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "cmt-001",
      "name": "Conventional Commit Format",
      "category": "workflow",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Enforces conventional commit message format",
      "file": "/rules/basic/commit-format.md#rule-cmt-001-conventional-commit-format",
      "implementation": "commit-msg",
      "performance_impact": "low"
    },
    {
      "id": "cmt-002",
      "name": "Issue Reference Required",
      "category": "workflow",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Requires commits to reference an issue number",
      "file": "/rules/basic/commit-format.md#rule-cmt-002-issue-reference-required",
      "implementation": "commit-msg",
      "performance_impact": "low"
    },
    {
      "id": "tst-001",
      "name": "Tests Must Pass",
      "category": "quality",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Ensures all tests pass before commits",
      "file": "/rules/basic/testing.md#rule-tst-001-tests-must-pass",
      "implementation": "pre-commit",
      "performance_impact": "high"
    },
    {
      "id": "tst-002",
      "name": "Test Coverage Threshold",
      "category": "quality",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Ensures code coverage meets minimum threshold",
      "file": "/rules/basic/testing.md#rule-tst-002-test-coverage-threshold",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "tst-003",
      "name": "No Skipped Tests",
      "category": "quality",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Prevents committing skipped or focused tests",
      "file": "/rules/basic/testing.md#rule-tst-003-no-skipped-tests",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "doc-001",
      "name": "README Required",
      "category": "documentation",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Ensures project has README with required sections",
      "file": "/rules/basic/documentation.md#rule-doc-001-readme-required",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "doc-002",
      "name": "Code Comments for Complex Logic",
      "category": "documentation",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Requires comments for complex functions",
      "file": "/rules/basic/documentation.md#rule-doc-002-code-comments-for-complex-logic",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "doc-003",
      "name": "Update Documentation with Code",
      "category": "documentation",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Ensures docs are updated with code changes",
      "file": "/rules/basic/documentation.md#rule-doc-003-update-documentation-with-code",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "doc-004",
      "name": "Documentation Update Enforcement",
      "category": "documentation",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Reminds developers to update docs when code changes",
      "file": "/rules/quality/documentation-enforcement.md#rule-doc-004-documentation-update-enforcement",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "sty-001",
      "name": "Linting Must Pass",
      "category": "quality",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Ensures code passes linting checks",
      "file": "/rules/basic/code-style.md#rule-sty-001-linting-must-pass",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "sty-002",
      "name": "No Console Logs",
      "category": "quality",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Prevents committing debug console statements",
      "file": "/rules/basic/code-style.md#rule-sty-002-no-console-logs",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "sty-003",
      "name": "Consistent File Naming",
      "category": "quality",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Enforces consistent file naming conventions",
      "file": "/rules/basic/code-style.md#rule-sty-003-consistent-file-naming",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "wfl-001",
      "name": "Issue-Driven Development",
      "category": "workflow",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Every code change starts with a GitHub issue",
      "file": "/rules/advanced/workflow-integrity.md#rule-wfl-001-issue-driven-development",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "wfl-002",
      "name": "PR Workflow Enforcement",
      "category": "workflow",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Comprehensive PR workflow for collaboration",
      "file": "/rules/advanced/workflow-integrity.md#rule-wfl-002-pr-workflow-enforcement",
      "implementation": "multiple",
      "performance_impact": "medium"
    },
    {
      "id": "wfl-003",
      "name": "Anti-Stall Patterns",
      "category": "workflow",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Prevents development stalls with progress patterns",
      "file": "/rules/advanced/workflow-integrity.md#rule-wfl-003-anti-stall-patterns",
      "implementation": "multiple",
      "performance_impact": "low"
    },
    {
      "id": "wfl-004",
      "name": "Terminal and Git Configuration",
      "category": "workflow",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Enforces non-interactive git operations",
      "file": "/rules/advanced/workflow-integrity.md#rule-wfl-004-terminal-and-git-configuration",
      "implementation": "setup",
      "performance_impact": "low"
    },
    {
      "id": "wfl-005",
      "name": "Local Issue Work Tracking",
      "category": "workflow",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Track work on issues in local markdown files to preserve context",
      "file": "/rules/workflow/issue-work-tracking.md#rule-wfl-005-local-issue-work-tracking",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "wfl-006",
      "name": "Pre-Push Conflict Detection",
      "category": "workflow",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Detect merge conflicts before pushing to prevent unmergeable PRs",
      "file": "/rules/workflow/pre-push-conflict-detection.md#rule-wfl-006-pre-push-conflict-detection",
      "implementation": "pre-push",
      "performance_impact": "low"
    },
    {
      "id": "wfl-007",
      "name": "Automatic Work Log Updates",
      "category": "workflow",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Automatically update issue work logs with commit information",
      "file": "/rules/workflow/auto-worklog-updates.md#rule-wfl-007-automatic-work-log-updates",
      "implementation": "post-commit",
      "performance_impact": "low"
    },
    {
      "id": "wfl-008",
      "name": "Issue Grooming and Dependency Check",
      "category": "workflow",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Review linked issues and verify project alignment before work",
      "file": "/rules/workflow/issue-grooming.md#rule-wfl-008-issue-grooming-and-dependency-check",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "wfl-009",
      "name": "Dependency Safety Check",
      "category": "workflow",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Prevents deletion of files with active dependencies",
      "file": "/rules/workflow/dependency-safety-check.md#rule-wfl-009-dependency-safety-check",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "ai-001",
      "name": "Project Context Alignment",
      "category": "ai-development",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Ensures AI code aligns with project context",
      "file": "/rules/ai-development/context-preservation.md#rule-ai-001-project-context-alignment",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "ai-002",
      "name": "AI Agent Coordination",
      "category": "ai-development",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Manages multiple AI agents to prevent conflicts",
      "file": "/rules/ai-development/context-preservation.md#rule-ai-002-ai-agent-coordination",
      "implementation": "multiple",
      "performance_impact": "low"
    },
    {
      "id": "ai-003",
      "name": "Reward Hacking Prevention",
      "category": "ai-development",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Prevents AI from gaming metrics",
      "file": "/rules/ai-development/reward-hacking-prevention.md#rule-ai-003-reward-hacking-prevention",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "ai-004",
      "name": "Context Window Management",
      "category": "ai-development",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Optimizes code for AI context windows",
      "file": "/rules/ai-development/context-preservation.md#rule-ai-004-context-window-management",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "ai-005",
      "name": "Goal Alignment Verification",
      "category": "ai-development",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Ensures changes serve project goals, not just task completion",
      "file": "/rules/ai-development/reward-hacking-prevention.md#rule-ai-005-goal-alignment-verification",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "owasp-001",
      "name": "Input Validation (OWASP #3)",
      "category": "security",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Comprehensive input validation against injection",
      "file": "/rules/security/owasp-compliance.md#rule-owasp-001-input-validation-owasp-3",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "owasp-002",
      "name": "Authentication & Session Management (OWASP #2)",
      "category": "security",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Secure authentication and session practices",
      "file": "/rules/security/owasp-compliance.md#rule-owasp-002-authentication--session-management-owasp-2",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "owasp-003",
      "name": "Sensitive Data Exposure Prevention (OWASP #6)",
      "category": "security",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Prevents logging or exposing sensitive data",
      "file": "/rules/security/owasp-compliance.md#rule-owasp-003-sensitive-data-exposure-prevention-owasp-6",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "owasp-004",
      "name": "Security Misconfiguration Prevention (OWASP #5)",
      "category": "security",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Prevents common security misconfigurations",
      "file": "/rules/security/owasp-compliance.md#rule-owasp-004-security-misconfiguration-prevention-owasp-5",
      "implementation": "multiple",
      "performance_impact": "medium"
    },
    {
      "id": "eng-001",
      "name": "SOLID Principles Enforcement",
      "category": "quality",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Enforces SOLID principles for OOP",
      "file": "/rules/quality/engineering-principles.md#rule-eng-001-solid-principles-enforcement",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "eng-002",
      "name": "Test-Driven Development (TDD)",
      "category": "quality",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Enforces TDD practices and test-first development",
      "file": "/rules/quality/engineering-principles.md#rule-eng-002-test-driven-development-tdd",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "eng-003",
      "name": "Clean Code Standards",
      "category": "quality",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Enforces clean code principles",
      "file": "/rules/quality/engineering-principles.md#rule-eng-003-clean-code-standards",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "eng-004",
      "name": "Design Pattern Compliance",
      "category": "quality",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Encourages patterns and prevents anti-patterns",
      "file": "/rules/quality/engineering-principles.md#rule-eng-004-design-pattern-compliance",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-001",
      "name": "Claude Safety Context",
      "category": "llm-specific",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Prevent Claude from refusing legitimate security-related code work",
      "file": "/rules/llm-specific/claude-rules.md#rule-llm-001-claude-safety-context",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-002",
      "name": "Claude Conciseness Enforcement",
      "category": "llm-specific",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Ensure prompts to Claude include conciseness directives",
      "file": "/rules/llm-specific/claude-rules.md#rule-llm-002-claude-conciseness-enforcement",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-003",
      "name": "Claude Thinking Mode Triggers",
      "category": "llm-specific",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Remind developers to use Claude's thinking mode triggers",
      "file": "/rules/llm-specific/claude-rules.md#rule-llm-003-claude-thinking-mode-triggers",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-004",
      "name": "Claude Context Window Management",
      "category": "llm-specific",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Prevent context window overflow in Claude conversations",
      "file": "/rules/llm-specific/claude-rules.md#rule-llm-004-claude-context-window-management",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-005",
      "name": "Claude Artifact Generation",
      "category": "llm-specific",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Track when Claude generates artifacts and ensure proper integration",
      "file": "/rules/llm-specific/claude-rules.md#rule-llm-005-claude-artifact-generation",
      "implementation": "post-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-006",
      "name": "GPT-4 Context Window Management",
      "category": "llm-specific",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Handle GPT-4's context window limitations and confusion",
      "file": "/rules/llm-specific/gpt4-openai-rules.md",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-007",
      "name": "GPT-4 Output Quality Monitoring",
      "category": "llm-specific",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Detect and prevent GPT-4 quality degradation issues",
      "file": "/rules/llm-specific/gpt4-openai-rules.md",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-008",
      "name": "GitHub Copilot Security Scanning",
      "category": "llm-specific",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Enhanced security scanning for Copilot-generated code",
      "file": "/rules/llm-specific/github-copilot-rules.md",
      "implementation": "pre-commit",
      "performance_impact": "medium"
    },
    {
      "id": "llm-009",
      "name": "Copilot Comment-Driven Development",
      "category": "llm-specific",
      "complexity": "basic",
      "enabled_by_default": false,
      "description": "Enforce proper comment structure for Copilot suggestions",
      "file": "/rules/llm-specific/github-copilot-rules.md",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-010",
      "name": "Cursor AI Context Management",
      "category": "llm-specific",
      "complexity": "basic",
      "enabled_by_default": true,
      "description": "Optimize Cursor AI context and performance",
      "file": "/rules/llm-specific/cursor-ai-rules.md",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-011",
      "name": "Cline Project Context",
      "category": "llm-specific",
      "complexity": "advanced",
      "enabled_by_default": false,
      "description": "Maintain project context for Cline AI assistant",
      "file": "/rules/llm-specific/cline-rules.md",
      "implementation": "pre-commit",
      "performance_impact": "low"
    },
    {
      "id": "llm-012",
      "name": "General LLM Prompt Injection Prevention",
      "category": "llm-specific",
      "complexity": "advanced",
      "enabled_by_default": true,
      "description": "Prevent prompt injection attacks in LLM interactions",
      "file": "/rules/llm-specific/README.md",
      "implementation": "pre-commit",
      "performance_impact": "low"
    }
  ],
  "categories": {
    "security": {
      "name": "Security",
      "description": "Rules for preventing security vulnerabilities",
      "icon": "🔒"
    },
    "workflow": {
      "name": "Workflow",
      "description": "Rules for development process and collaboration",
      "icon": "📋"
    },
    "quality": {
      "name": "Code Quality",
      "description": "Rules for code quality and maintainability",
      "icon": "✨"
    },
    "documentation": {
      "name": "Documentation",
      "description": "Rules for maintaining documentation",
      "icon": "📝"
    },
    "ai-development": {
      "name": "AI Development",
      "description": "Rules for AI-assisted development",
      "icon": "🤖"
    },
    "llm-specific": {
      "name": "LLM-Specific",
      "description": "Rules for specific LLM providers and behaviors",
      "icon": "🧠"
    }
  },
  "presets": {
    "minimal": {
      "name": "Minimal",
      "description": "Basic security and commit format only",
      "rules": ["sec-001", "sec-002", "cmt-001"]
    },
    "standard": {
      "name": "Standard",
      "description": "Recommended rules for most projects",
      "rules": ["sec-001", "sec-002", "sec-003", "cmt-001", "tst-003", "doc-001", "sty-001", "sty-002", "wfl-006"]
    },
    "strict": {
      "name": "Strict",
      "description": "All basic rules enabled",
      "rules": ["sec-001", "sec-002", "sec-003", "cmt-001", "cmt-002", "tst-001", "tst-003", "doc-001", "doc-003", "sty-001", "sty-002"]
    },
    "ai-developer": {
      "name": "AI Developer",
      "description": "Optimized for AI-assisted development",
      "rules": ["sec-001", "sec-002", "sec-003", "cmt-001", "cmt-002", "ai-001", "ai-003", "wfl-001", "wfl-002", "wfl-006"]
    },
    "enterprise": {
      "name": "Enterprise",
      "description": "Comprehensive security and quality enforcement",
      "rules": ["sec-001", "sec-002", "sec-003", "owasp-001", "owasp-002", "owasp-003", "owasp-004", "cmt-001", "cmt-002", "tst-001", "tst-002", "doc-001", "doc-003", "sty-001", "eng-001", "eng-003"]
    }
  }
}